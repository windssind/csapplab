                            | # Execution begins at address 0    
0x000:                      |     .pos 0x0
0x000: 30f40004000000000000 |     irmovq stack,%rsp #set up stack pointer
0x00a: 804800000000000000   |     call main
0x013: 00                   |     halt
                            | 
0x018:                      | .align 8# Source block
0x018: 0a00000000000000     | src:.quad 0x00a
0x020: b000000000000000     |     .quad 0x0b0
0x028: 000c000000000000     |     .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |     .quad 0x111
0x038: 2202000000000000     |     .quad 0x222
0x040: 3303000000000000     |     .quad 0x333
                            | # 函数的声明
0x048:                      | main:
0x048: 30f71800000000000000 |     irmovq src,%rdi
0x052: 30f63000000000000000 |     irmovq dest,%rsi
0x05c: 30f20300000000000000 |     irmovq 3,%rdx
0x066: 807000000000000000   |     call copy_block
0x06f: 00                   |     halt
0x070:                      | copy_block:
0x070: 30f00000000000000000 |     irmovq $0,%rax
0x07a: 70b300000000000000   |     jmp test
                            | 
0x083:                      | Loop:
0x083: 50370000000000000000 |     mrmovq (%rdi),%rbx # val=*src
0x08d: 30f50800000000000000 |     irmovq $0x8,%rbp 
0x097: 6057                 |     addq %rbp,%rdi ## src++
0x099: 40360000000000000000 |     rmmovq %rbx,(%rsi) ## *dest=val
0x0a3: 6056                 |     addq %rbp,%rsi ##dest ++
0x0a5: 6330                 |     xorq %rbx,%rax ## result^=val
0x0a7: 30fa0100000000000000 |     irmovq $1,%r10
0x0b1: 61a2                 |     subq %r10,%rdx ## len--
0x0b3:                      | test:
0x0b3: 6222                 |     andq %rdx,%rdx
0x0b5: 748300000000000000   |     jne Loop
0x0be: 90                   |     ret
                            | 
0x400:                      |     .pos 0x400
0x400:                      | stack:
